generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  phone     String?
  createdAt DateTime @default(now())
  email     String   @unique
  password  String
  avatarUrl String?
  address   String?

  capitalCosts  CapitalCost[]
  indicators    FinancialIndicators[]
  summaries     SummaryMonthly[]
  transactions  Transaction[]
  PaymentMethod PaymentMethod[]
  Category      Category[]
}

model Category {
  id           String          @id @default(uuid())
  name         String          @default("Tidak diketahui")
  type         TransactionType
  userId       String?
  isDefault    Boolean         @default(false)
  createdAt    DateTime        @default(now())
  user         User?           @relation(fields: [userId], references: [id])
  transactions Transaction[]

  @@unique([name, userId])
}

model PaymentMethod {
  id   String @id @default(uuid())
  name String

  userId String?
  user   User?   @relation(fields: [userId], references: [id])

  isDefault Boolean @default(false)

  transactions Transaction[]

  @@unique([name, userId])
}

model Transaction {
  id              String          @id @default(uuid())
  userId          String
  date            DateTime
  itemName        String
  type            TransactionType
  amount          Decimal         @db.Decimal(12, 2)
  paymentMethodId String?
  paymentMethod   PaymentMethod?  @relation(fields: [paymentMethodId], references: [id])
  note            String?
  recordedAt      DateTime        @default(now())
  categoryId      String?
  category        Category?       @relation(fields: [categoryId], references: [id])
  user            User            @relation(fields: [userId], references: [id])
  ItemMapping     ItemMapping?    @relation(fields: [itemMappingId], references: [id])
  itemMappingId   Int?

  @@index([userId, date])
}

model CapitalCost {
  id             String   @id @default(uuid())
  userId         String
  itemName       String
  costType       CostType
  costAmount     Decimal  @db.Decimal(12, 2)
  lifespanMonths Int
  startDate      DateTime
  note           String?
  user           User     @relation(fields: [userId], references: [id])
}

model FinancialIndicators {
  id             Int            @id @default(autoincrement())
  userId         String
  month          String
  bepRupiah      Float?
  profitMargin   Float?
  cashflowStatus CashflowStatus
  note           String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  summaryMonthlyId Int?            @unique
  summaryMonthly   SummaryMonthly? @relation(name: "SummaryToIndicators", fields: [summaryMonthlyId], references: [id])

  user User @relation(fields: [userId], references: [id])
}

model ItemMapping {
  id          Int       @id @default(autoincrement())
  itemName    String    @unique
  groupType   GroupType
  defaultUnit String?
  notes       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  transactions Transaction[]
}

model SummaryMonthly {
  id                   Int      @id @default(autoincrement())
  userId               String
  month                String
  totalIncome          Float    @default(0)
  totalExpenseFixed    Float    @default(0)
  totalExpenseVariable Float    @default(0)
  netProfit            Float    @default(0)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  financialIndicators FinancialIndicators? @relation(name: "SummaryToIndicators")

  user User @relation(fields: [userId], references: [id])
}

enum GroupType {
  PEMASUKAN
  TETAP
  VARIABEL
  MODAL
}

enum CostType {
  fixed
  variable
}

enum TransactionType {
  PEMASUKAN
  PENGELUARAN
}

enum CashflowStatus {
  SEHAT
  WASPADA
  KRITIS
}
